{"version":3,"sources":["components/GraphVizComponent.js","components/RefGraphInfo.js","Nav.js","App.js","serviceWorker.js","index.js"],"names":["examples","owner","project","id","subgraphsOvertime","GraphVizCompoment","props","params","queryString","parse","location","search","ref","React","createRef","draw","bind","renderGraph","renderMenu","renderMenuSummary","renderMenuCommitList","renderError","renderExamples","renderToolTip","readData","selectRandomGraph","createDigraph","createRandomSubgraph","showGraph","state","match","width","offsetWidth","height","offsetHeight","graph","commits_list","commits_params","commits","split","error","level","summary","this","tooltip","d3_select","selectAll","on","d","transition","duration","style","target","parent","attributes","prefixLocation","length","slice","Math","max","html","d3_event","pageX","window","pageXOffset","pageY","pageYOffset","url","d3","defer","await","data","setState","developers","info","edges","vertices","agedays","refactorings","group","language","digraph","msgLabel","map","refactoring","before","after","includes","sha1","Object","keys","selectedProject","floor","random","selectedItem","selectedPosition","ids","selectedId","history","push","className","Graphviz","dot","options","zoom","dangerouslySetInnerHTML","__html","title","aria-hidden","index","key","href","rel","onClick","type","process","example","Component","RefGraphInfo","sort","edge1","edge2","localeCompare","scope","edge","lineB","lineA","alt","src","App","Nav","basename","exact","path","component","GraphVizComponent","from","to","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c8849c0f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {Graphviz} from 'graphviz-react';\nimport * as d3 from 'd3';\nimport {select as d3_select} from 'd3-selection'\nimport {event as d3_event} from 'd3-selection'\nimport queryString from 'query-string';\n\nconst examples = [\n  {\n    owner: 'apache',\n    project: 'dubbo',\n    id: 0\n  },\n  {\n    owner: 'spring-projects',\n    project: 'spring-framework',\n    id: 2578\n  },\n  {\n    owner: 'quilljs',\n    project: 'quill',\n    id: 24\n  },\n  {\n    owner: 'facebook',\n    project: 'react',\n    id: 77\n  }\n];\n\nvar subgraphsOvertime = {}\n\nclass GraphVizCompoment extends Component {\n\n  constructor(props) {\n\n    super();\n\n    let params = queryString.parse(props.location.search)\n\n    this.ref = React.createRef();\n\n    this.draw = this.draw.bind(this);\n    this.renderGraph =  this.renderGraph.bind(this);\n    this.renderMenu = this.renderMenu.bind(this)\n    this.renderMenuSummary = this.renderMenuSummary.bind(this)\n    this.renderMenuCommitList = this.renderMenuCommitList.bind(this)\n    this.renderError = this.renderError.bind(this)\n    this.renderExamples = this.renderExamples.bind(this)\n    this.renderToolTip = this.renderToolTip.bind(this)\n    this.readData = this.readData.bind(this)\n    this.selectRandomGraph = this.selectRandomGraph.bind(this)\n    this.createDigraph = this.createDigraph.bind(this)\n    this.createRandomSubgraph = this.createRandomSubgraph.bind(this)\n    this.showGraph = this.showGraph.bind(this)\n\n    this.state = {\n      owner: props.match.params.owner,\n      project: props.match.params.project,\n      id: props.match.params.id,\n      width: this.ref.offsetWidth,\n      height: this.ref.offsetHeight, //window.innerHeight - 262,\n      graph: 'digraph refgraph {}',\n      commits_list: [],\n      commits_params: params.commits ? params.commits.split(',') : [],\n      error: false,\n      level: \"\",\n      summary: \"\"\n    };\n\n  }\n\n  componentDidMount() {\n    this.draw()\n  }\n\n  renderToolTip(){\n    var tooltip = d3_select(\".tooltip-node\")\n    d3_select('svg').selectAll('ellipse')\n    .on(\"mouseover\", (d) => {\n\n        tooltip.transition()\n        .duration(200)\n        .style(\"opacity\", 1);\n\n        var target = d.parent.attributes.target.split(\"#\")\n        var prefixLocation = target[0].length > 40 ? '...' : '';\n        var location = `${prefixLocation}${target[0].slice(Math.max(-40, -target[0].length))}`;\n\n        tooltip.html(`\n          <table class=\"table-borderless table-sm\">\n            <tr><td class=\"td-label\"><b>${this.state.level}: </b></td><td class=\"td-info\">${target[1]}</td></tr>\n            <tr><td class=\"td-label\"><b>Location: </b></td><td class=\"td-info\">${location}</td></tr>\n          </table>`)\n        .style(\"left\", (d3_event.pageX + window.pageXOffset) + \"px\")\n        .style(\"top\", (d3_event.pageY - window.pageYOffset)  + \"px\");\n    })\n   .on(\"mouseout\", function(d) {\n      tooltip.transition()\n      .duration(200)\n      .style(\"opacity\", 0);\n   })\n\n  }\n\n  readData(url){\n    d3.queue()\n    .defer(d3.json, url)\n    .await((error, data) => {\n      if(error){\n        this.setState({\n          error: true\n        })\n      }\n      else{\n        this.setState({\n          developers: data.info.developers,\n          edges: data.info.edges,\n          vertices: data.info.vertices,\n          commits: data.info.commits,\n          agedays: data.info.agedays,\n          refactorings: data.info.refactorings,\n          group: data.info.group,\n          language: data.info.language,\n          level: data.info.level,\n          summary: data.info.summary,\n          commits_list: data.commits_list,\n          graph: this.createDigraph(data.edges),\n          error: false\n        }, () => {\n            this.renderToolTip()\n        })\n      }\n    })\n  }\n\n  createDigraph(edges){\n    var digraph = `digraph \"\" {ratio=\"auto\"; node [shape=point, width=0.25]; rankdir=LR; `;\n    var msgLabel = 'Click to see the commit on GitHub';\n    var edgeFont = `fontsize=10, arrowsize=1 fontname=\"Arial, sans-serif\"`\n    edges.map((refactoring) =>\n      digraph += ` \"${refactoring.before}\" -> \"${refactoring.after}\" \n        [color=\"${this.state.commits_params.includes(refactoring.sha1)? '#ff0000' : '#909090'}\", label=\"${refactoring.ref}\", ${edgeFont}, edgehref=\"https://github.com/${this.state.owner}/${this.state.project}/commit/${refactoring.sha1}\", edgetarget=\"_blank\", labeltarget=\"_blank\" edgetooltip=\"${msgLabel}\", labelhref=\"https://github.com/${this.state.owner}/${this.state.project}/commit/${refactoring.sha1}\", labeltooltip=\"${msgLabel}\"\n        ];\n        \"${refactoring.before}\"[target=\"${refactoring.before}\" tooltip=\" \"]\n        \"${refactoring.after}\"[target=\"${refactoring.after}\" tooltip=\" \"]\n        `\n    );\n    digraph += `}`\n    return digraph\n  }\n\n  draw(){\n    const url = `/data/${this.state.owner}/${this.state.project}/subgraph_${this.state.id}.json`;\n    this.readData(url)\n  }\n\n  createRandomSubgraph(){\n    if(!Object.keys(subgraphsOvertime).length){\n      d3.queue()\n      .defer(d3.json, '/data/subgraphs_overtime_top_2.json')\n      .await((error, data) => {\n        if(error){\n          this.setState({\n            error: true\n          })\n        }\n        else{\n          subgraphsOvertime = data;\n          this.selectRandomGraph();\n          this.setState({\n            error: false\n          });\n        }\n      })\n    }\n    else{\n      this.selectRandomGraph();\n    }\n  }\n\n  selectRandomGraph(){\n    var selectedProject = Math.floor(Math.random() * 20)\n    var selectedItem = subgraphsOvertime[selectedProject]\n    var selectedPosition = Math.floor(Math.random() * selectedItem.ids.length)\n    var selectedId = selectedItem.ids[selectedPosition]\n    this.showGraph(selectedItem.owner, selectedItem.project, selectedId)\n  }\n\n  showGraph(owner, project, id){\n    this.setState({\n      owner: owner,\n      project: project,\n      id: id\n    }, () => {\n      this.draw()\n      this.props.history.push(`/${this.state.owner}/${this.state.project}/${this.state.id}`);\n    })\n  }\n\n  renderGraph() {\n    if(!this.state.error){\n      return (\n        <div className=\"col col-lg-9 text-center\" ref={this.ref}>\n          <div className=\"graphviz-custom\">\n            <Graphviz dot={this.state.graph} options={{ width: this.state.width, height: this.state.height, zoom: false}} />\n            <div className=\"tooltip-node border border-secondary rounded\"></div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  renderMenuSummary(){\n    if(!this.state.error && this.state.summary){\n      return(\n      <div className=\"card card-summary text-white bg-dark\">\n        <div className=\"card-body text-monospace text-center\">\n          <div dangerouslySetInnerHTML={{__html: `<b>Summary:</b> ${this.state.summary} `}}></div>\n        </div>\n      </div>\n      )\n    }\n  }\n\n  renderMenuCommitList(){\n    return(\n      <ul className=\"list-group list-group-flush ul-bottom border border-secondary rounded ul-custom\">\n        <li className=\"list-group-item border-0 li-custom\" title=\"Number of commits used in this subgraph\">\n          <i className=\"fa fa-code-branch fa-fw\" aria-hidden=\"true\"></i>&nbsp;\n          Commits used in this subgraph: {this.state.commits}\n          </li>\n          {this.state.commits_list.map((sha1, index) => {\n            return <a key={index} href={`https://github.com/${this.state.owner}/${this.state.project}/commit/${sha1}`}target=\"_blank\" rel=\"noopener noreferrer\"><li className=\"list-group-item li-custom\">\n              {sha1}\n            </li></a>\n          })}\n      </ul>\n    )\n  }\n\n  renderMenu(){\n    if(!this.state.error){\n\n      return (\n        <div className=\"col col-lg-3\">\n          {/* {this.renderMenuSummary()} */}\n           <ul className=\"list-group list-group-flush border border-secondary rounded ul-custom\">\n           <li className=\"list-group-item border-0 li-custom text-center\" title=\"Plot a random refactoring subgraph\">\n              <button onClick={this.createRandomSubgraph} type=\"button\" className=\"btn btn-sm btn-dark button-random\">\n              Random subgraph &nbsp;<i className=\"fas fa-random fa-fw mx-auto\"  aria-hidden=\"true\"></i>\n              </button>\n            </li>\n             <li className=\"list-group-item border-0 li-custom\" title=\"Subgraph ID\">\n              <i className=\"fas fa-info-circle\" aria-hidden=\"true\"></i>&nbsp; Subgraph #{this.state.id}\n            </li>\n            <li className=\"list-group-item border-0 li-custom\" title=\"GitHub Project\">\n              <i className=\"fab fa-github fa-fw mx-auto\"  aria-hidden=\"true\"></i>&nbsp; <a href={`https://github.com/${this.state.owner}/${this.state.project}`} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.owner}/{this.state.project}</a>                   </li>\n            <li className=\"list-group-item border-0 li-custom\" title=\"Language\">\n              <i className=\"far fa-file-code fa-fw\" aria-hidden=\"true\"></i>&nbsp; {this.state.language}\n            </li>\n            <li className=\"list-group-item border-0 li-custom\" title=\"Number of vertices\">\n                <i className=\"fa fa-ellipsis-h fa-fw\"  aria-hidden=\"true\"></i>&nbsp;\n                Vertices: {this.state.vertices}\n            </li>\n            <li className=\"list-group-item border-0 li-custom\" title=\"Number of edges\">\n                <i className=\"fa fa-exchange-alt fa-fw\" aria-hidden=\"true\"></i>&nbsp;\n                Edges: {this.state.edges}\n            </li>\n            <li className=\"list-group-item border-0 li-custom\" title=\"Number of days between the most recent and the oldest commit\">\n              <i className=\"far fa-clock fa-fw\" aria-hidden=\"true\"></i>&nbsp; Age: {this.state.agedays}\n            </li>\n            <li className=\"list-group-item border-0 li-custom\" title=\"Number of distinct refatorings\">\n              <i className=\"far fa-registered fa-fw\"  aria-hidden=\"true\"></i>&nbsp;\n                Distinct refactorings: {this.state.refactorings}\n            </li>\n          </ul>\n          {/* {this.renderMenuCommitList()} */}\n        </div>\n      )\n    }\n  }\n\n  renderError(){\n    if(this.state.error){\n      return (\n        <div className=\"col col-lg-12 text-center h5 error-msg\">\n          <p>Refactoring subgraph not found. Back to <a href={process.env.PUBLIC_URL} rel=\"noopener noreferrer\"> homepage</a>.</p>\n        </div>\n      )\n    }\n  }\n\n  renderExamples(){\n    if(!this.state.error){\n      return (\n        <div className=\"row\">\n          <div className=\"col col-lg-12 text-center examples\">\n            <span className=\"example-item\">Examples:</span>\n            {examples.map((example, index) => (\n              <a  className=\"example-item\" href={`#/${example.owner}/${example.project}/${example.id}`} key={index} onClick={() => {this.showGraph(example.owner, example.project, example.id)}}>\n                {example.project}\n              </a>\n            ))}\n          </div>\n        </div>\n      )\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"container-fluid\" id=\"graph-div\">\n         {this.renderExamples()}\n        <div className=\"row\">\n          {this.renderMenu()}\n          {this.renderGraph()}\n          {this.renderError()}\n        </div>\n      </div>\n    )\n  }\n}\nexport default GraphVizCompoment;","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport queryString from 'query-string';\n\nclass RefGraphInfo extends Component{\n\n  constructor(props){\n    super(props);\n    let params = queryString.parse(this.props.location.search)\n    this.readData = this.readData.bind(this)\n    this.state = {\n        owner: props.match.params.owner,\n        project: props.match.params.project,\n        id: props.match.params.id,\n        level: \"\",\n        edges: [],\n        commits: params.commits ? params.commits.split(',') : []\n      };\n  }\n\n  componentDidMount() {\n    const url = `/data/${this.state.owner}/${this.state.project}/subgraph_${this.state.id}.json`;\n    this.readData(url)\n  }\n\n  readData(url){\n    d3.queue()\n    .defer(d3.json, url)\n    .await((error, data) => {\n      if(error){\n        this.setState({\n          error: true\n        })\n      }\n      else{\n        this.setState({\n          edges: data.edges.sort((edge1, edge2) => {return ('' + edge1.sha1).localeCompare(edge2.sha1)}),\n          level: data.info.level,\n          error: false\n        });\n      }\n    })\n  }\n\n\n  render(){\n    return(\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-lg-11 offset-md-1 table-custom\">\n            <table className=\"table table-responsive\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Edge ID</th>\n                  <th scope=\"col\">Commit</th>\n                  <th scope=\"col\">Refatoring</th>\n                  <th scope=\"col\">Entity Before</th>\n                  <th scope=\"col\">Entity After</th>\n                  \n                </tr>\n              </thead>\n              <tbody>\n                  {this.state.edges.map((edge, index) => {\n                    return(\n                      <tr key={index} className= {this.state.commits.includes(edge.sha1) ? \"alert alert-info\" : \"\"}>\n                        <th scope=\"row\">{edge.id}</th>\n                        <td><a key={index} href={`https://github.com/${this.state.owner}/${this.state.project}/commit/${edge.sha1}`}target=\"_blank\" rel=\"noopener noreferrer\">{edge.sha1}</a></td>\n                        <td>{edge.ref}</td>\n                        <td>{edge.before}{(edge.lineB)? \" (line \" + edge.lineB + \")\" : \"\"}</td>\n                        <td>{edge.after}{(edge.lineA)? \" (line \" + edge.lineA + \")\" : \"\"}</td>\n                      </tr>\n                    )\n                  })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default RefGraphInfo;","import React from 'react';\n\nexport default () => {\n  return (\n   <header>\n      <div className=\"navbar navbar-dark bg-dark\" >\n        <a className=\"navbar-brand\" href=\"/#\"> \n          Refactoring Graph\n        </a>\n        <div className=\"justify-content-end\" title=\"https://github.com/alinebrito/refactoring-graph\">\n            <a href=\"https://github.com/alinebrito/refactoring-graph\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <img\n                width=\"150\" height=\"25\"\n                alt=\"GitHub stars\"\n                src=\"https://img.shields.io/github/stars/alinebrito/refactoring-graph?label=GitHub%20|%20Stars&style=social\"\n              />\n            </a>\n        </div>\n      </div>\n      <div className=\"container\">\n          <div className=\"card-body border-0 card-nav\">\n            <p className=\"text-center\">Refactoring Graph is a data structure to assess refactorings over time. The vertices are methods/functions and the edges represent refactoring operations. <b>Hover the mouse over a vertice</b> to see its name, and <b>click an edge</b> to see the commit on GitHub.\n            </p>\n          </div>\n      </div>\n    </header>\n  );\n};","import React from 'react';\nimport './App.css';\nimport './style.css';\nimport GraphVizComponent from \"./components/GraphVizComponent.js\";\nimport RefGraphInfo from \"./components/RefGraphInfo.js\";\nimport { BrowserRouter, Route, Switch, Redirect, HashRouter } from \"react-router-dom\";\nimport Navbar from './Nav';\n\nfunction App() { \n  return (\n    <div>\n      <Navbar />\n          <BrowserRouter>\n            <div>\n                <Switch>\n                  <HashRouter basename={process.env.PUBLIC_URL}>\n                    <Route exact path=\"/:owner/:project/:id/info\" component={RefGraphInfo} />\n                    <Route exact path=\"/:owner/:project/:id\" component={GraphVizComponent} />\n                    <Route exact path=\"/\">\n                      <Redirect from=\"/\" exact to=\"/elastic/elasticsearch/713\"/>\n                    </Route>\n                  </HashRouter>\n                </Switch>\n            </div>\n          </BrowserRouter>\n    </div>\n\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}